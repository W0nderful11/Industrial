from aiogram import Router, F
from aiogram.types import InlineQuery, InputTextMessageContent, InlineQueryResultArticle
from aiogram.utils.i18n import I18n

from database.database import ORM
from services.telegram.filters.role import RoleFilter

router = Router()
# –§–∏–ª—å—Ç—Ä—É–µ–º, —á—Ç–æ–±—ã inline-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
router.inline_query.filter(RoleFilter(roles=["admin"]))

@router.inline_query()
async def admin_user_search_inline(inline_query: InlineQuery, orm: ORM, i18n: I18n, user):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç inline-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    query = inline_query.query or ''
    results = []
    
    # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
    if not query:
        await inline_query.answer(results, cache_time=0)
        return

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
    users, _ = await orm.user_repo.search_users(query, page=0, limit=10)

    if users:
        for found_user in users:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_details_text = (
                f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {found_user.fullname or 'N/A'} (<code>{found_user.user_id}</code>)\n"
                f"<b>–ù–∏–∫:</b> @{found_user.username or 'N/A'}\n"
                f"<b>–ë–∞–ª–∞–Ω—Å:</b> {found_user.token_balance} ü™ô\n"
                f"<b>–†–æ–ª—å:</b> {found_user.role}\n"
                f"<b>–Ø–∑—ã–∫:</b> {found_user.lang}\n"
                f"<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {found_user.created_at.strftime('%Y-%m-%d') if found_user.created_at else 'N/A'}"
            )
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            result = InlineQueryResultArticle(
                id=str(found_user.user_id),
                title=f"{found_user.fullname or 'N/A'} (@{found_user.username or 'N/A'})",
                description=f"ID: {found_user.user_id} | –¢–æ–∫–µ–Ω—ã: {found_user.token_balance}",
                input_message_content=InputTextMessageContent(
                    message_text=user_details_text,
                    parse_mode="HTML"
                )
            )
            results.append(result)

    await inline_query.answer(results, cache_time=10) 