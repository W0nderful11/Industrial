from database.database import ORM
from aiogram import Bot
from aiogram.utils.i18n import I18n
from aiogram.exceptions import TelegramForbiddenError, TelegramNotFound
import logging

logger = logging.getLogger(__name__)

async def check_subscribe_client(orm: ORM, bot: Bot, i18n: I18n):
    (expired_subscriptions, almost_expired_subscriptions) = await orm.subscription_repo.get_expired()

    for subscription in expired_subscriptions:
        user_id = subscription.user_id
        await orm.subscription_repo.delete_subscription(user_id)
        user = await orm.user_repo.find_user_by_user_id(user_id)

        if user and user.lang:
            text = i18n.gettext('–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ \n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É —á—Ç–æ–±—ã –≤–∞–º –ø—Ä–æ–¥–ª–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É', locale=user.lang)
            try:
                await bot.send_message(user_id, text)
            except (TelegramForbiddenError, TelegramNotFound) as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}", exc_info=True)

    for subscription in almost_expired_subscriptions:
        user_id = subscription.user_id
        await orm.subscription_repo.warn_user(user_id)
        user = await orm.user_repo.find_user_by_user_id(user_id)

        if user and user.lang:
            text = i18n.gettext('–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ —Å—É—Ç–∫–∏ \n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É —á—Ç–æ–±—ã –≤–∞–º –ø—Ä–æ–¥–ª–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É', locale=user.lang)
            try:
                await bot.send_message(user_id, text)
            except (TelegramForbiddenError, TelegramNotFound) as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}", exc_info=True)

async def grant_monthly_token_bonus(orm: ORM, bot: Bot, i18n: I18n):
    logger.info("–ó–∞–ø—É—Å–∫ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤...")
    tokens_to_add = 1
    users = await orm.user_repo.find_all()
    success_count = 0
    fail_count = 0

    for user in users:
        try:
            success = await orm.user_repo.add_tokens(user_id=user.user_id, tokens_to_add=tokens_to_add)
            if success:
                success_count += 1
                logger.info(f"–ù–∞—á–∏—Å–ª–µ–Ω {tokens_to_add} –±–æ–Ω—É—Å–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}.")
                try:
                    user_lang = user.lang if user.lang else 'ru'
                    bonus_message = i18n.gettext("üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–æ–Ω—É—Å: {count} —Ç–æ–∫–µ–Ω!", locale=user_lang).format(count=tokens_to_add)
                    await bot.send_message(user.user_id, bonus_message)
                except (TelegramForbiddenError, TelegramNotFound) as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–º –±–æ–Ω—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
                except Exception as e_msg:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–º –±–æ–Ω—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e_msg}", exc_info=True)
            else:
                fail_count += 1
        except Exception as e_add:
            fail_count += 1
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e_add}", exc_info=True)

    logger.info(f"–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –£—Å–ø–µ—à–Ω–æ: {success_count}, –ù–µ—É–¥–∞—á–Ω–æ: {fail_count}.")