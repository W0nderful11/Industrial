import typing

from aiogram import types
from aiogram.utils.i18n import I18n

from services.telegram.schemas.analyzer import ModelPhone, SolutionAboutError


def template_about_analysis_result_header(
        phone: ModelPhone,
        solution_about_error: typing.Optional[SolutionAboutError],
        i18n: I18n,
        lang: str
):
    header_text = i18n.gettext("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:", locale=lang)
    model_text = i18n.gettext("üì± –ú–æ–¥–µ–ª—å:", locale=lang)
    ios_version_text = i18n.gettext("üõ†Ô∏è –í–µ—Ä—Å–∏—è iOS:", locale=lang)
    failure_date_text = i18n.gettext("üìÖ –î–∞—Ç–∞ —Å–±–æ—è:", locale=lang)

    text = """
<b>{header}</b>
{model_label} {model} ({model_version})
{ios_label} {ios_version}
{date_label} {date_of_failure}
""".format(
        header=header_text,
        model_label=model_text,
        model=phone.model,
        model_version=phone.version,
        ios_label=ios_version_text,
        ios_version=phone.ios_version,
        date_label=failure_date_text,
        date_of_failure=solution_about_error.date_of_failure if solution_about_error and solution_about_error.date_of_failure else i18n.gettext("–ù–µ —É–∫–∞–∑–∞–Ω–∞", locale=lang)
    )
    return text


def template_about_analysis_result(
        solution_about_error: SolutionAboutError,
        i18n: I18n,
        lang: str
) -> str:
    header_text = i18n.gettext("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–º–æ–Ω—Ç—É:", locale=lang)
    text = f"""
<b>{header_text}</b>
{solution_about_error.show_solution()}
"""

    return text


def template_not_found_solution(
        content_type: str,
        i18n: I18n,
        lang: str
):

    texts = {
        types.ContentType.DOCUMENT: i18n.gettext(
                    """
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∏—Å–∫ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ –Ω–∞—à–µ–π –±–∞–∑–µ –∞–Ω–∞–ª–∏–∑–æ–≤ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏–º —Ä–µ—à–µ–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É –≤ –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ panic-—Ñ–∞–π–ª—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Ö —Ç–∞–∫–∂–µ –∏–∑—É—á–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤ –Ω–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –æ—Ç–ª–∏—á–∏—è. –ò–Ω–æ–≥–¥–∞ –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤.

–ê –ø–æ–∫–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—ã—Ç–∞ —Ç–∏–ø–æ–≤—ã—Ö –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π. –ù–∏–∂–µ —Å–æ–±—Ä–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –±—ã—Å—Ç—Ä–µ–µ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –¥–∞–∂–µ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –æ—à–∏–±–∫–∏:
                    """, locale=lang
                ),
        types.ContentType.PHOTO: i18n.gettext(
            """
‚ö†Ô∏è –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–∞ –ª–∏ –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –±–µ–∑ –Ω–µ–µ –∞–Ω–∞–ª–∏–∑ –ø–æ —Ñ–æ—Ç–æ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –≤–æ–∑–º–æ–∂–Ω—ã –±–ª–∏–∫–∏, —Ä–∞–∑–º—ã—Ç–æ—Å—Ç—å –∏–ª–∏ —Å–ª–∞–±–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ.
–ß—Ç–æ–±—ã –±–æ—Ç —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –ø—Ä–æ–±–ª–µ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, *–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .ips –∏–ª–∏ .txt* (panic-—Ñ–∞–π–ª –∏–ª–∏ –ª–æ–≥).

–¢–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Ç–æ—á–Ω–µ–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! 
            """, locale=lang
            # EN: ‚ö†Ô∏è Screenshot is not readable - check if the phone model is indicated on the screenshot, without it the photo analysis will not work, glare, blurriness or poor quality are possible.
        )
    }

    return texts.get(content_type)